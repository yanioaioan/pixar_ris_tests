OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
surface simplesurface
param	color	Cin	1 1 1		%read{7,7} %write{2147483647,-1}
oparam	color	Cout	0 0 0		%read{18,29} %write{7,30}
global	point	P	%read{10,24} %write{2147483647,-1}
global	float	u	%read{6,31} %write{2147483647,-1} %derivs
global	float	v	%read{6,31} %write{2147483647,-1} %derivs
local	color	red	%read{2147483647,-1} %write{0,0}
local	color	green	%read{2147483647,-1} %write{1,1}
local	color	blue	%read{2147483647,-1} %write{2,2}
local	color	greenISH	%read{18,29} %write{3,3}
local	float	fuzz	%read{11,25} %write{4,4}
local	float	dist	%read{16,27} %write{9,20}
local	float	inDisk	%read{18,29} %write{17,28}
local	point	centre	%read{9,20} %write{5,19}
local	point	here	%read{8,20} %write{6,6}
local	color	smallGreenSpotOnTheLeft	%read{30,30} %write{18,18}
local	color	bigGreenishMiddleArea	%read{30,30} %write{29,29}
local	float	currnetUVColor	%read{2147483647,-1} %write{31,31}
local	float	frame	%read{2147483647,-1} %write{32,32}
const	string	$const1	"rgb"		%read{0,3} %write{2147483647,-1}
const	int	$const2	1		%read{32,32} %write{2147483647,-1}
const	float	$const3	1		%read{0,28} %write{2147483647,-1}
const	float	$const5	0		%read{0,6} %write{2147483647,-1}
const	float	$const6	0.050000001		%read{3,3} %write{2147483647,-1}
const	float	$const7	0.98000002		%read{3,3} %write{2147483647,-1}
const	float	$const8	0.0049999999		%read{4,4} %write{2147483647,-1}
const	point	$const9	0.60000002 0.30000001 0		%read{5,5} %write{2147483647,-1}
const	float	$const10	0.0099999998		%read{8,8} %write{2147483647,-1}
temp	point	$tmp1	%read{9,9} %write{8,8}
temp	float	$tmp2	%read{17,17} %write{16,16}
const	float	$const11	0.02		%read{12,12} %write{2147483647,-1}
temp	float	$tmp3	%read{11,11} %write{10,10}
temp	float	$tmp4	%read{12,12} %write{11,11}
temp	float	$tmp5	%read{16,16} %write{12,12}
const	float	$const12	0.029999999		%read{15,15} %write{2147483647,-1}
temp	float	$tmp6	%read{14,14} %write{13,13}
temp	float	$tmp7	%read{15,15} %write{14,14}
temp	float	$tmp8	%read{16,16} %write{15,15}
const	point	$const13	0.5 0.5 0		%read{19,19} %write{2147483647,-1}
temp	float	$tmp9	%read{28,28} %write{27,27}
const	float	$const14	0.1		%read{23,23} %write{2147483647,-1}
temp	float	$tmp10	%read{22,22} %write{21,21}
temp	float	$tmp11	%read{23,23} %write{22,22}
temp	float	$tmp12	%read{27,27} %write{23,23}
const	float	$const15	0.2		%read{26,26} %write{2147483647,-1}
temp	float	$tmp13	%read{25,25} %write{24,24}
temp	float	$tmp14	%read{26,26} %write{25,25}
temp	float	$tmp15	%read{27,27} %write{26,26}
const	float	$const16	0.60000002		%read{30,30} %write{2147483647,-1}
const	string	$const17	"outSide.tx"		%read{31,31} %write{2147483647,-1}
code ___main___
# simplesurface.osl:14
#     color red=color("rgb",1,0,0);
	color		red $const1 $const3 $const5 $const5 	%filename{"simplesurface.osl"} %line{14} %argrw{"wrrrr"}
# simplesurface.osl:15
#     color green=color  ("rgb",0,1,0);
	color		green $const1 $const5 $const3 $const5 	%line{15} %argrw{"wrrrr"}
# simplesurface.osl:16
#     color blue=color  ("rgb",0,0,1);
	color		blue $const1 $const5 $const5 $const3 	%line{16} %argrw{"wrrrr"}
# simplesurface.osl:18
#     color greenISH = color("rgb", 0.05, 0.98, 0);
	color		greenISH $const1 $const6 $const7 $const5 	%line{18} %argrw{"wrrrr"}
# simplesurface.osl:20
#     float fuzz=0.005;
	assign		fuzz $const8 	%line{20} %argrw{"wr"}
# simplesurface.osl:23
#     point centre=point (0.6,0.3,0);
	assign		centre $const9 	%line{23} %argrw{"wr"}
# simplesurface.osl:24
#     point here=point(u,v,0);
	point		here u v $const5 	%line{24} %argrw{"wrrr"}
# simplesurface.osl:26
#     Cout=Cin;
	assign		Cout Cin 	%line{26} %argrw{"wr"}
# simplesurface.osl:32
#     dist=distance(centre,here-0.01);
	sub		$tmp1 here $const10 	%line{32} %argrw{"wrr"}
	distance	dist centre $tmp1 	%argrw{"wrr"}
# simplesurface.osl:33
#     inDisk=1-smoothstep(0.02-fuzz*noise(P), 0.03-fuzz*noise(P), dist);
	noise		$tmp3 P 	%line{33} %argrw{"wr"}
	mul		$tmp4 fuzz $tmp3 	%argrw{"wrr"}
	sub		$tmp5 $const11 $tmp4 	%argrw{"wrr"}
	noise		$tmp6 P 	%argrw{"wr"}
	mul		$tmp7 fuzz $tmp6 	%argrw{"wrr"}
	sub		$tmp8 $const12 $tmp7 	%argrw{"wrr"}
	smoothstep	$tmp2 $tmp5 $tmp8 dist 	%argrw{"wrrr"}
	sub		inDisk $const3 $tmp2 	%argrw{"wrr"}
# simplesurface.osl:34
#     color smallGreenSpotOnTheLeft=mix(Cout,greenISH,inDisk);
	mix		smallGreenSpotOnTheLeft Cout greenISH inDisk 	%line{34} %argrw{"wrrr"}
# simplesurface.osl:37
#     centre=point (0.5,0.5,0);
	assign		centre $const13 	%line{37} %argrw{"wr"}
# simplesurface.osl:38
#     dist=distance(centre,here);
	distance	dist centre here 	%line{38} %argrw{"wrr"}
# simplesurface.osl:39
#     inDisk=1-smoothstep(0.1-fuzz*noise(P), 0.2-fuzz*noise(P), dist);
	noise		$tmp10 P 	%line{39} %argrw{"wr"}
	mul		$tmp11 fuzz $tmp10 	%argrw{"wrr"}
	sub		$tmp12 $const14 $tmp11 	%argrw{"wrr"}
	noise		$tmp13 P 	%argrw{"wr"}
	mul		$tmp14 fuzz $tmp13 	%argrw{"wrr"}
	sub		$tmp15 $const15 $tmp14 	%argrw{"wrr"}
	smoothstep	$tmp9 $tmp12 $tmp15 dist 	%argrw{"wrrr"}
	sub		inDisk $const3 $tmp9 	%argrw{"wrr"}
# simplesurface.osl:40
#     color bigGreenishMiddleArea=mix(Cout,greenISH,inDisk);
	mix		bigGreenishMiddleArea Cout greenISH inDisk 	%line{40} %argrw{"wrrr"}
# simplesurface.osl:42
#     Cout=mix(smallGreenSpotOnTheLeft,bigGreenishMiddleArea,0.6);
	mix		Cout smallGreenSpotOnTheLeft bigGreenishMiddleArea $const16 	%line{42} %argrw{"wrrr"}
# simplesurface.osl:47
# 	float currnetUVColor=texture("outSide.tx",u,v);
	texture		currnetUVColor $const17 u v 	%line{47} %argrw{"wrrr"} %argderivs{2,3}
# simplesurface.osl:49
# 	float frame=1;
	assign		frame $const2 	%line{49} %argrw{"wr"}
	end

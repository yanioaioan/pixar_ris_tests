OpenShadingLanguage 1.00
# Compiled by oslc 1.6.2dev
surface oak
param	point	Pos	0 0 0		%read{2,2} %write{0,0} %initexpr
param	float	Sharpness	0.0099999998		%read{57,57} %write{2147483647,-1}
param	float	ringfreq	8		%read{34,34} %write{2147483647,-1}
param	float	ringunevenness	0.5		%read{43,43} %write{2147483647,-1}
param	float	ringnoise	0.02		%read{19,19} %write{2147483647,-1}
param	float	ringnoisefreq	1		%read{4,4} %write{2147483647,-1}
param	float	grainfreq	25		%read{55,55} %write{2147483647,-1}
param	float	trunkwobble	0.15000001		%read{24,24} %write{2147483647,-1}
param	float	trunkwobblefreq	0.025		%read{22,22} %write{2147483647,-1}
param	float	angularwobble	1		%read{36,36} %write{2147483647,-1}
param	float	angularwobblefreq	1.5		%read{37,37} %write{2147483647,-1}
param	color	Clightwood	0.5 0.2 0.067000002		%read{91,91} %write{2147483647,-1}
param	color	Cdarkwood	0.15000001 0.077 0.028000001		%read{91,91} %write{2147483647,-1}
param	float	ringy	1		%read{89,89} %write{2147483647,-1}
param	float	grainy	1		%read{78,78} %write{2147483647,-1}
oparam	color	Color	0 0 0		%read{2147483647,-1} %write{91,91}
oparam	float	Spec	0.1		%read{2147483647,-1} %write{95,95}
oparam	float	Roughness	0.1		%read{2147483647,-1} %write{97,97}
oparam	float	Disp	0		%read{2147483647,-1} %write{92,92}
global	point	P	%read{0,0} %write{2147483647,-1}
local	float	___319_amp	%read{9,17} %write{6,17}
local	point	___319_pp	%read{9,17} %write{7,17}
local	vector	___319_sum	%read{9,18} %write{8,17}
local	float	___319_i	%read{9,17} %write{9,17}
local	vector	___321_d	%read{9,17} %write{9,17}
local	vector	___322_offset	%read{19,19} %write{18,18}
local	point	___322_Pring	%read{26,37} %write{20,26}
local	vector	___322_d	%read{24,24} %write{23,23}
local	float	___322_r	%read{35,50} %write{34,44}
local	float	___322_inring	%read{60,89} %write{54,88}
local	point	___322_Pgrain	%read{60,88} %write{56,88}
local	float	___322_dPgrain	%read{60,88} %write{57,88}
local	float	___322_grain	%read{60,90} %write{58,88}
local	float	___322_i	%read{60,88} %write{60,88}
local	float	___322_amp	%read{60,88} %write{59,88}
local	float	___324_grain1valid	%read{60,88} %write{60,88}
local	float	___325_g	%read{60,88} %write{60,88}
local	point	Pshad	%read{4,55} %write{2,2}
local	float	wood	%read{91,96} %write{90,90}
const	string	$const1	"object"		%read{2,2} %write{2147483647,-1}
const	string	$const2	"transform"		%read{1,1} %write{2147483647,-1}
const	string	$const3	"common"		%read{2,2} %write{2147483647,-1}
const	string	$const4	"oaktexture"		%read{3,3} %write{2147483647,-1}
temp	point	$tmp1	%read{7,7} %write{4,4}
const	int	$const5	2		%read{21,62} %write{2147483647,-1}
const	float	$const6	2		%read{11,86} %write{2147483647,-1}
const	float	$const8	4		%read{16,16} %write{2147483647,-1}
const	float	$const9	0.5		%read{15,93} %write{2147483647,-1}
const	string	$const10	"vfBm"		%read{5,5} %write{2147483647,-1}
const	int	$const11	1		%read{6,59} %write{2147483647,-1}
const	int	$const12	0		%read{8,79} %write{2147483647,-1}
temp	int	$tmp2	%read{9,17} %write{9,17}
temp	vector	$tmp3	%read{14,14} %write{13,13}
const	float	$const13	1		%read{17,94} %write{2147483647,-1}
temp	vector	$tmp4	%read{20,20} %write{19,19}
temp	float	$tmp5	%read{22,22} %write{21,21}
temp	float	$tmp6	%read{23,23} %write{22,22}
temp	vector	$tmp7	%read{25,25} %write{24,24}
const	vector	$const14	1 1 0		%read{25,25} %write{2147483647,-1}
temp	vector	$tmp9	%read{26,26} %write{25,25}
temp	float	$tmp10	%read{34,34} %write{33,33}
temp	float	$tmp11	%read{30,30} %write{27,27}
temp	float	$tmp12	%read{31,31} %write{28,28}
const	string	$const15	"hypot"		%read{29,29} %write{2147483647,-1}
temp	float	$tmp13	%read{32,32} %write{30,30}
temp	float	$tmp14	%read{32,32} %write{31,31}
temp	float	$tmp15	%read{33,33} %write{32,32}
temp	float	$tmp16	%read{36,36} %write{35,35}
const	float	$const16	0		%read{35,75} %write{2147483647,-1}
const	float	$const18	5		%read{35,35} %write{2147483647,-1}
temp	float	$tmp17	%read{40,40} %write{36,36}
temp	float	$tmp18	%read{40,40} %write{39,39}
temp	point	$tmp19	%read{38,38} %write{37,37}
const	vector	$const19	1 1 0.1		%read{38,38} %write{2147483647,-1}
temp	point	$tmp21	%read{39,39} %write{38,38}
temp	float	$tmp22	%read{41,41} %write{40,40}
temp	float	$tmp23	%read{43,43} %write{42,42}
temp	float	$tmp24	%read{44,44} %write{43,43}
const	float	$const20	0.1		%read{52,97} %write{2147483647,-1}
const	float	$const21	0.55000001		%read{52,52} %write{2147483647,-1}
const	float	$const22	0.69999999		%read{53,69} %write{2147483647,-1}
const	float	$const23	0.94999999		%read{53,53} %write{2147483647,-1}
const	string	$const24	"smoothpulsetrain"		%read{45,45} %write{2147483647,-1}
temp	float	$tmp25	%read{52,53} %write{50,50}
const	string	$const25	"mod"		%read{46,46} %write{2147483647,-1}
temp	float	$tmp26	%read{49,49} %write{48,48}
temp	float	$tmp27	%read{48,48} %write{47,47}
temp	float	$tmp28	%read{50,50} %write{49,49}
const	string	$const26	"smoothpulse"		%read{51,51} %write{2147483647,-1}
temp	float	$tmp29	%read{54,54} %write{52,52}
temp	float	$tmp30	%read{54,54} %write{53,53}
temp	point	$tmp31	%read{56,56} %write{55,55}
const	vector	$const27	1 1 0.050000001		%read{56,56} %write{2147483647,-1}
temp	int	$tmp33	%read{60,88} %write{60,88}
temp	float	$tmp34	%read{64,64} %write{63,63}
const	float	$const28	0.2		%read{63,63} %write{2147483647,-1}
const	float	$const29	0.60000002		%read{63,63} %write{2147483647,-1}
temp	int	$tmp35	%read{66,66} %write{65,65}
temp	float	$tmp36	%read{68,68} %write{67,67}
const	float	$const30	0.30000001		%read{70,70} %write{2147483647,-1}
temp	float	$tmp37	%read{70,70} %write{69,69}
temp	float	$tmp38	%read{71,71} %write{70,70}
temp	float	$tmp39	%read{76,76} %write{75,75}
const	float	$const31	0.80000001		%read{72,72} %write{2147483647,-1}
temp	float	$tmp40	%read{74,74} %write{72,72}
const	string	$const32	"clamp"		%read{73,73} %write{2147483647,-1}
temp	float	$tmp41	%read{75,75} %write{74,74}
temp	float	$tmp42	%read{78,78} %write{77,77}
temp	int	$tmp43	%read{80,80} %write{79,79}
const	float	$const33	0.40000001		%read{81,81} %write{2147483647,-1}
temp	float	$tmp44	%read{82,82} %write{81,81}
temp	float	$tmp45	%read{83,83} %write{82,82}
temp	float	$tmp46	%read{90,90} %write{89,89}
temp	float	$tmp47	%read{94,94} %write{93,93}
temp	float	$tmp48	%read{95,95} %write{94,94}
temp	float	$tmp49	%read{97,97} %write{96,96}
code Pos
# oak.osl:113
#     point Pos = P,  
	assign		Pos P 	%filename{"oak.osl"} %line{113} %argrw{"wr"}
code ___main___
# oak.osl:134
#     point Pshad = transform ("object", Pos);
	functioncall	$const2 3 	%filename{"oak.osl"} %line{134} %argrw{"r"}
# /data2/trinar/p4dev/rmanprod/_publish/linuxRHEL6_x86-64_gcc44icc140_external_releaseprofile/RenderManProServer-19.1b1/lib/osl/include/stdosl.h:243
# PERCOMP1 (log10)
	transform	Pshad $const3 $const1 Pos 	%filename{"/data2/trinar/p4dev/rmanprod/_publish/linuxRHEL6_x86-64_gcc44icc140_external_releaseprofile/RenderManProServer-19.1b1/lib/osl/include/stdosl.h"} %line{243} %argrw{"wrrr"}
# oak.osl:137
#          angularwobble, angularwobblefreq, ringy, grainy);  
	functioncall	$const4 91 	%filename{"oak.osl"} %line{137} %argrw{"r"}
# oak.osl:68
#     vector offset = vfBm(Pshad*ringnoisefreq, 2, 4, 0.5);  
	mul		$tmp1 Pshad ringnoisefreq 	%line{68} %argrw{"wrr"}
	functioncall	$const10 19 	%argrw{"r"}
# oak.osl:31
#     float amp = 1;  
	assign		___319_amp $const11 	%line{31} %argrw{"wr"}
# oak.osl:32
#     point pp = p;  
	assign		___319_pp $tmp1 	%line{32} %argrw{"wr"}
# oak.osl:33
#     vector sum = 0;  
	assign		___319_sum $const12 	%line{33} %argrw{"wr"}
# oak.osl:36
#     for (i = 0;  i < octaves;  i += 1) {  
	for		$tmp2 11 12 17 18 	%line{36} %argrw{"r"}
	assign		___319_i $const12 	%argrw{"wr"}
	lt		$tmp2 ___319_i $const6 	%argrw{"wrr"}
# oak.osl:37
#         vector d = snoise(pp);  
	snoise		___321_d ___319_pp 	%line{37} %argrw{"wr"}
# oak.osl:38
#         sum += amp * d;  
	mul		$tmp3 ___319_amp ___321_d 	%line{38} %argrw{"wrr"}
	add		___319_sum ___319_sum $tmp3 	%argrw{"wrr"}
# oak.osl:39
#         amp *= gain;    
	mul		___319_amp ___319_amp $const9 	%line{39} %argrw{"wrr"}
# oak.osl:40
#         pp *= lacunarity;    
	mul		___319_pp ___319_pp $const8 	%line{40} %argrw{"wrr"}
# oak.osl:36
#     for (i = 0;  i < octaves;  i += 1) {  
	add		___319_i ___319_i $const13 	%line{36} %argrw{"wrr"}
# oak.osl:42
#     return sum;  
	assign		___322_offset ___319_sum 	%line{42} %argrw{"wr"}
# oak.osl:70
#     point Pring = Pshad + ringnoise*offset;  
	mul		$tmp4 ringnoise ___322_offset 	%line{70} %argrw{"wrr"}
	add		___322_Pring Pshad $tmp4 	%argrw{"wrr"}
# oak.osl:72
#     vector d = snoise(Pshad[2]*trunkwobblefreq) ;  
	compref		$tmp5 Pshad $const5 	%line{72} %argrw{"wrr"}
	mul		$tmp6 $tmp5 trunkwobblefreq 	%argrw{"wrr"}
	snoise		___322_d $tmp6 	%argrw{"wr"}
# oak.osl:73
#     Pring += trunkwobble * d * vector(1,1,0);  
	mul		$tmp7 trunkwobble ___322_d 	%line{73} %argrw{"wrr"}
	mul		$tmp9 $tmp7 $const14 	%argrw{"wrr"}
	add		___322_Pring ___322_Pring $tmp9 	%argrw{"wrr"}
# oak.osl:76
#     float r = hypot(Pring[0], Pring[1]) * ringfreq;  
	compref		$tmp11 ___322_Pring $const12 	%line{76} %argrw{"wrr"}
	compref		$tmp12 ___322_Pring $const11 	%argrw{"wrr"}
	functioncall	$const15 34 	%argrw{"r"}
# /data2/trinar/p4dev/rmanprod/_publish/linuxRHEL6_x86-64_gcc44icc140_external_releaseprofile/RenderManProServer-19.1b1/lib/osl/include/stdosl.h:113
# #define M_2_PI     0.6366197723675813        /* 2/pi */
	mul		$tmp13 $tmp11 $tmp11 	%filename{"/data2/trinar/p4dev/rmanprod/_publish/linuxRHEL6_x86-64_gcc44icc140_external_releaseprofile/RenderManProServer-19.1b1/lib/osl/include/stdosl.h"} %line{113} %argrw{"wrr"}
	mul		$tmp14 $tmp12 $tmp12 	%argrw{"wrr"}
	add		$tmp15 $tmp13 $tmp14 	%argrw{"wrr"}
	sqrt		$tmp10 $tmp15 	%argrw{"wr"}
# oak.osl:76
#     float r = hypot(Pring[0], Pring[1]) * ringfreq;  
	mul		___322_r $tmp10 ringfreq 	%filename{"oak.osl"} %line{76} %argrw{"wrr"}
# oak.osl:78
#     r += angularwobble * smoothstep(0,5,r)  
	smoothstep	$tmp16 $const16 $const18 ___322_r 	%line{78} %argrw{"wrrr"}
	mul		$tmp17 angularwobble $tmp16 	%argrw{"wrr"}
# oak.osl:79
#     * snoise (angularwobblefreq*(Pring)*vector(1,1,0.1));  
	mul		$tmp19 angularwobblefreq ___322_Pring 	%line{79} %argrw{"wrr"}
	mul		$tmp21 $tmp19 $const19 	%argrw{"wrr"}
	snoise		$tmp18 $tmp21 	%argrw{"wr"}
	mul		$tmp22 $tmp17 $tmp18 	%argrw{"wrr"}
	add		___322_r ___322_r $tmp22 	%argrw{"wrr"}
# oak.osl:82
#     r += ringunevenness*snoise(r);  
	snoise		$tmp23 ___322_r 	%line{82} %argrw{"wr"}
	mul		$tmp24 ringunevenness $tmp23 	%argrw{"wrr"}
	add		___322_r ___322_r $tmp24 	%argrw{"wrr"}
# oak.osl:84
#     float inring = smoothpulsetrain (.1, .55, .7, .95, 1, r);  
	functioncall	$const24 55 	%line{84} %argrw{"r"}
# oak.osl:16
#     return smoothpulse (e0, e1, e2, e3, mod(x,period));  
	functioncall	$const25 51 	%line{16} %argrw{"r"}
# /data2/trinar/p4dev/rmanprod/_publish/linuxRHEL6_x86-64_gcc44icc140_external_releaseprofile/RenderManProServer-19.1b1/lib/osl/include/stdosl.h:135
# PERCOMP1 (sign)
	div		$tmp27 ___322_r $const13 	%filename{"/data2/trinar/p4dev/rmanprod/_publish/linuxRHEL6_x86-64_gcc44icc140_external_releaseprofile/RenderManProServer-19.1b1/lib/osl/include/stdosl.h"} %line{135} %argrw{"wrr"}
	floor		$tmp26 $tmp27 	%argrw{"wr"}
	mul		$tmp28 $const13 $tmp26 	%argrw{"wrr"}
	sub		$tmp25 ___322_r $tmp28 	%argrw{"wrr"}
# oak.osl:16
#     return smoothpulse (e0, e1, e2, e3, mod(x,period));  
	functioncall	$const26 55 	%filename{"oak.osl"} %line{16} %argrw{"r"}
# oak.osl:7
#     return smoothstep(e0,e1,x) - smoothstep(e2,e3,x);  
	smoothstep	$tmp29 $const20 $const21 $tmp25 	%line{7} %argrw{"wrrr"}
	smoothstep	$tmp30 $const22 $const23 $tmp25 	%argrw{"wrrr"}
	sub		___322_inring $tmp29 $tmp30 	%argrw{"wrr"}
# oak.osl:86
#     point Pgrain = Pshad*grainfreq*vector(1,1,.05);  
	mul		$tmp31 Pshad grainfreq 	%line{86} %argrw{"wrr"}
	mul		___322_Pgrain $tmp31 $const27 	%argrw{"wrr"}
# oak.osl:87
#     float dPgrain = dPshad; //dropped filterwidthp(Pgrain);  
	assign		___322_dPgrain Sharpness 	%line{87} %argrw{"wr"}
# oak.osl:88
#     float grain = 0;  
	assign		___322_grain $const12 	%line{88} %argrw{"wr"}
# oak.osl:89
#     float i, amp=1;  
	assign		___322_amp $const11 	%line{89} %argrw{"wr"}
# oak.osl:90
#     for (i = 0;  i < 2;  i += 1) {  
	for		$tmp33 62 63 88 89 	%line{90} %argrw{"r"}
	assign		___322_i $const12 	%argrw{"wr"}
	lt		$tmp33 ___322_i $const5 	%argrw{"wrr"}
# oak.osl:91
#         float grain1valid = 1-smoothstep(.2,.6,dPgrain);  
	smoothstep	$tmp34 $const28 $const29 ___322_dPgrain 	%line{91} %argrw{"wrrr"}
	sub		___324_grain1valid $const13 $tmp34 	%argrw{"wrr"}
# oak.osl:92
#         if (grain1valid > 0) {  
	gt		$tmp35 ___324_grain1valid $const12 	%line{92} %argrw{"wrr"}
	if		$tmp35 85 85 	%argrw{"r"}
# oak.osl:93
#             float g = grain1valid * snoise (Pgrain);  
	snoise		$tmp36 ___322_Pgrain 	%line{93} %argrw{"wr"}
	mul		___325_g ___324_grain1valid $tmp36 	%argrw{"wrr"}
# oak.osl:94
#             g *= (0.3 + 0.7*inring);  
	mul		$tmp37 $const22 ___322_inring 	%line{94} %argrw{"wrr"}
	add		$tmp38 $const30 $tmp37 	%argrw{"wrr"}
	mul		___325_g ___325_g $tmp38 	%argrw{"wrr"}
# oak.osl:95
#             g = pow(clamp(0.8 - (g),0,1),2);  
	sub		$tmp40 $const31 ___325_g 	%line{95} %argrw{"wrr"}
	functioncall	$const32 76 	%argrw{"r"}
# /data2/trinar/p4dev/rmanprod/_publish/linuxRHEL6_x86-64_gcc44icc140_external_releaseprofile/RenderManProServer-19.1b1/lib/osl/include/stdosl.h:144
# 
	min		$tmp41 $tmp40 $const13 	%filename{"/data2/trinar/p4dev/rmanprod/_publish/linuxRHEL6_x86-64_gcc44icc140_external_releaseprofile/RenderManProServer-19.1b1/lib/osl/include/stdosl.h"} %line{144} %argrw{"wrr"}
	max		$tmp39 $tmp41 $const16 	%argrw{"wrr"}
# oak.osl:95
#             g = pow(clamp(0.8 - (g),0,1),2);  
	pow		___325_g $tmp39 $const6 	%filename{"oak.osl"} %line{95} %argrw{"wrr"}
# oak.osl:96
#             g = grainy * smoothstep (0.5, 1, g);  
	smoothstep	$tmp42 $const9 $const13 ___325_g 	%line{96} %argrw{"wrrr"}
	mul		___325_g grainy $tmp42 	%argrw{"wrr"}
# oak.osl:97
#             if (i == 0)  
	eq		$tmp43 ___322_i $const12 	%line{97} %argrw{"wrr"}
	if		$tmp43 84 84 	%argrw{"r"}
# oak.osl:98
#                 inring *= (1-0.4*grain1valid);  
	mul		$tmp44 $const33 ___324_grain1valid 	%line{98} %argrw{"wrr"}
	sub		$tmp45 $const13 $tmp44 	%argrw{"wrr"}
	mul		___322_inring ___322_inring $tmp45 	%argrw{"wrr"}
# oak.osl:99
#             grain = max (grain, g);  
	max		___322_grain ___322_grain ___325_g 	%line{99} %argrw{"wrr"}
# oak.osl:101
#         Pgrain *= 2;  
	mul		___322_Pgrain ___322_Pgrain $const6 	%line{101} %argrw{"wrr"}
# oak.osl:102
#         dPgrain *= 2;  
	mul		___322_dPgrain ___322_dPgrain $const6 	%line{102} %argrw{"wrr"}
# oak.osl:103
#         amp *= 0.5;  
	mul		___322_amp ___322_amp $const9 	%line{103} %argrw{"wrr"}
# oak.osl:90
#     for (i = 0;  i < 2;  i += 1) {  
	add		___322_i ___322_i $const13 	%line{90} %argrw{"wrr"}
# oak.osl:106
#     return mix (inring*ringy, 1, grain);  
	mul		$tmp46 ___322_inring ringy 	%line{106} %argrw{"wrr"}
	mix		wood $tmp46 $const13 ___322_grain 	%argrw{"wrrr"}
# oak.osl:139
#     Color = mix (Clightwood, Cdarkwood, wood);  
	mix		Color Clightwood Cdarkwood wood 	%line{139} %argrw{"wrrr"}
# oak.osl:140
#     Disp = -wood;  // lightwood = 0, darkwood is deeper/lower = -1  
	neg		Disp wood 	%line{140} %argrw{"wr"}
# oak.osl:141
#     Spec = 0.1*(1-0.5*wood); // darkwood is less specular  
	mul		$tmp47 $const9 wood 	%line{141} %argrw{"wrr"}
	sub		$tmp48 $const13 $tmp47 	%argrw{"wrr"}
	mul		Spec $const20 $tmp48 	%argrw{"wrr"}
# oak.osl:142
#     Roughness = 0.1+0.1*wood; // and rougher  
	mul		$tmp49 $const20 wood 	%line{142} %argrw{"wrr"}
	add		Roughness $const20 $tmp49 	%argrw{"wrr"}
	end
